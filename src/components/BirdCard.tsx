import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { useToast } from "@/components/ui/use-toast";

interface BirdCardProps {
  name: string;
  latinName: string;
  image: string;
  status: string;
  description: string;
  fullDescription?: string;
  habitat?: string;
  threats?: string[];
}

const BirdCard = ({ 
  name, 
  latinName, 
  status, 
  image, 
  description,
  fullDescription,
  habitat,
  threats = []
}: BirdCardProps) => {
  const [isOpen, setIsOpen] = useState(false);
  const { toast } = useToast();

  const handleVolunteerClick = () => {
    toast({
      title: "–°—Ç–∞—Ç—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–º",
      description: "–ü—Ä–∏–≤–µ—Ç! üëã –°—Ç–∞—Ç—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–º –≤ Red Pigeon –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è üò•, –Ω–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å! –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —ç—Ç–æ–π –∫—Ä—É—Ç–æ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏! ü§© –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å –Ω–∞–º–∏, —Å–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–æ–≥–∞—Ç—å –Ω–∞–º –¥–µ–ª–∞—Ç—å –º–∏—Ä –ª—É—á—à–µ! ‚ú®",
      duration: 5000,
    });
  };

  const handleDonateClick = () => {
    toast({
      title: "–°–¥–µ–ª–∞—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ",
      description: "–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–∞ –∫–æ—Ä–º –¥–ª—è –Ω–∞—à–∏—Ö –ø—Ç–∏—á–µ–∫ üòî. –ù–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º! –°–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–æ—á—å –Ω–∞–º –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –ø–µ—Ä–Ω–∞—Ç—ã—Ö –¥—Ä—É–∑—å—è—Ö! üê¶ –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å –Ω–∞–º–∏! ‚ù§Ô∏è",
      duration: 5000,
    });
  };

  return (
    <>
      <Card className="bird-card overflow-hidden">
        <div className="bird-tag absolute top-3 right-3 z-10 bg-redbird px-3 py-1 rounded-full text-white text-xs font-medium">{status}</div>
        <div className="overflow-hidden h-60 relative">
          <img 
            src={image} 
            alt={name} 
            className="w-full h-full object-cover transition-transform duration-300 hover:scale-110"
            onError={(e) => {
              const target = e.target as HTMLImageElement;
              target.src = "/placeholder.svg";
            }}
          />
        </div>
        <CardContent className="bird-card-content p-5">
          <h3 className="text-lg font-bold text-redbird">{name}</h3>
          <p className="text-sm italic text-gray-500 mb-2">{latinName}</p>
          <p className="text-sm text-gray-700 mb-4 line-clamp-3">{description}</p>
          <Dialog open={isOpen} onOpenChange={setIsOpen}>
            <DialogTrigger asChild>
              <Button 
                variant="outline" 
                className="w-full border-redbird text-redbird hover:bg-redbird hover:text-white transition-colors duration-300"
              >
                –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
              </Button>
            </DialogTrigger>
            <DialogContent className="sm:max-w-[600px] max-h-[90vh] overflow-y-auto">
              <DialogHeader>
                <DialogTitle className="text-redbird text-2xl">{name}</DialogTitle>
                <DialogDescription className="italic">{latinName}</DialogDescription>
              </DialogHeader>
              <div className="space-y-4 mt-4">
                <img 
                  src={image} 
                  alt={name}
                  className="w-full h-64 object-cover rounded-md"
                  onError={(e) => {
                    const target = e.target as HTMLImageElement;
                    target.src = "/placeholder.svg";
                  }}
                />
                <div className="px-1 py-1 bg-redbird-muted rounded-md text-redbird font-medium inline-block">
                  {status}
                </div>
                <div>
                  <h4 className="font-semibold text-lg">–û–ø–∏—Å–∞–Ω–∏–µ</h4>
                  <p className="text-gray-700">{fullDescription || description}</p>
                </div>
                {habitat && (
                  <div>
                    <h4 className="font-semibold text-lg">–ê—Ä–µ–∞–ª –æ–±–∏—Ç–∞–Ω–∏—è</h4>
                    <p className="text-gray-700">{habitat}</p>
                  </div>
                )}
                {threats && threats.length > 0 && (
                  <div>
                    <h4 className="font-semibold text-lg">–£–≥—Ä–æ–∑—ã –≤–∏–¥—É</h4>
                    <ul className="list-disc pl-5">
                      {threats.map((threat, index) => (
                        <li key={index} className="text-gray-700">{threat}</li>
                      ))}
                    </ul>
                  </div>
                )}
                <div>
                  <h4 className="font-semibold text-lg">–ö–∞–∫ –º–æ–∂–Ω–æ –ø–æ–º–æ—á—å</h4>
                  <p className="text-gray-700 mb-4">
                    –ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–¥–∫–∏—Ö –≤–∏–¥–æ–≤ –∏ –ø—Ä–æ–µ–∫—Ç—ã –ø–æ –∑–∞—â–∏—Ç–µ 
                    –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã –æ–±–∏—Ç–∞–Ω–∏—è —ç—Ç–∏—Ö –ø—Ç–∏—Ü.
                  </p>
                  <div className="flex flex-col sm:flex-row gap-3">
                    <Button 
                      className="bg-redbird hover:bg-redbird-dark transition-colors duration-300"
                      onClick={handleDonateClick}
                    >
                      –°–¥–µ–ª–∞—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ
                    </Button>
                    <Button 
                      variant="outline" 
                      className="border-redbird text-redbird hover:bg-redbird hover:text-white transition-colors duration-300"
                      onClick={handleVolunteerClick}
                    >
                      –°—Ç–∞—Ç—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–º
                    </Button>
                  </div>
                </div>
              </div>
            </DialogContent>
          </Dialog>
        </CardContent>
      </Card>
    </>
  );
};

export default BirdCard;
